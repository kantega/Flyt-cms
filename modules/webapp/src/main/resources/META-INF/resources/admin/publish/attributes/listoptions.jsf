<%@ page import="no.kantega.commons.util.LocaleLabels"%>
<%@ page import="no.kantega.publishing.common.data.Content"%>
<%@ page import="no.kantega.publishing.common.data.ListOption" %>
<%@ page import="static org.apache.commons.lang3.StringUtils.isBlank" %>
<%@ page import="java.util.List" %>
<%@ page import="java.util.Locale" %>
<%--
  ~ Copyright 2009 Kantega AS
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  --%>
<%!
    private boolean isSelected(ListOption option, String value) {
        String optText = option.getText();
        String optVal  = option.getValue();
        if (isBlank(optVal)) {
            optVal = optText;
        }

        boolean selected = false;
        if ((isBlank(value)) && (option.isDefaultSelected())) {
            selected = true;
        } else {
            if (value != null) {
                String[] values = value.split(",");
                for (String v : values) {
                    if (v.equalsIgnoreCase(optVal)) {
                        selected = true;
                        break;
                    }
                }
            }
        }

        return selected;
    }

%>
<%
    {
        Content content = (Content)request.getAttribute("content");
        String fieldName = (String) request.getAttribute("fieldName");
        Boolean alwaysUseSelectList = (Boolean) request.getAttribute("alwaysUseSelectList");
        
        String value = attribute.getValue();
        List<ListOption> options = attribute.getListOptions(content.getLanguage());
        if (attribute.getMultiple() && alwaysUseSelectList == null) {
            out.write("<div class=\"inpSelectList\">");
            out.write("<table border=\"0\">");
            if (options != null) {
                for (int i = 0; i < options.size(); i++) {
                    ListOption option  = options.get(i);
                    String optText = option.getText();
                    String optVal  = option.getValue();

                    if (isBlank(optVal)) {
                        optVal = optText;
                    }
                    boolean attributeValueIsAksessThis = String.valueOf(content.getAssociation().getAssociationId()).equals(optVal);
                    if (!attributeValueIsAksessThis) {
                        out.write("<tr>");
                        String inputIdentifier = fieldName + i;
                        out.write("<td><input id=\"" + inputIdentifier + "\" type=\"checkbox\"");
                        out.write(" name=\"" + fieldName + "\"");
                        out.write(" value=\"" + optVal + "\"");
                        if (isSelected(option, value)) {
                            out.write(" checked=\"checked\"");
                        }
                        out.write(">");
                        out.write("</td>");
                        out.write("<td>");
                        out.write("<label for=\"" + inputIdentifier + "\">" + optText + "</label>");
                        out.write("</td>");
                        out.write("</tr>");
                    }
                }
            }
            out.write("</table>");
            out.write("</div>");
        } else {
            out.write("<select class=\"fullWidth\"");
            out.write(" tabindex=\"" + attribute.getTabIndex() + "\"");
            out.write(" id=\"" + fieldName + "\"");
            if (attribute.getMultiple()) {
                out.write(" multiple size=\"8\"");
            }
            out.write(" name=\"" + fieldName + "\">");
            if (options != null) {
                for (ListOption option : options) {
                    String optText = option.getText();
                    String optVal = option.getValue();
                    boolean attributeValueIsAksessThis = String.valueOf(content.getAssociation().getAssociationId()).equals(optVal);
                    if (!attributeValueIsAksessThis) {
                        if (isBlank(optVal) && isBlank(optText)) {
                            Locale locale = LocaleLabels.getLocaleFromRequestOrDefault(request);
                            optText = LocaleLabels.getLabel("aksess.list.ingen", locale);
                        }else if (isBlank(optVal)) {
                            optVal = optText;
                        }

                        out.write("<option");
                        out.write(" value=\"" + optVal + "\"");
                        if (isSelected(option, value)) {
                            out.write(" selected=\"selected\"");
                        }
                        out.write(">");
                        out.write(optText);
                        out.write("</option>");
                    }
                }
            }
            out.write("</select>");
        }
    }
%>
